# ###################################################
#
# 本文件用于定义监测 link-* 的 lt64 数量
#
# ###################################################

import "alert/link/cfg/lt64.rule";

# ############################################
# 第一步：获取 link-* 过去 __range_time_unit__ 
#	的 sum of lt64
# ############################################

def __query_now(res,args) {
	result = query("
		SELECT
			SUM(lt64) AS lt64
		FROM

			'link-*'
		WHERE
			last(%(__range_time_unit__))
			AND node IN $(__itap_node__)
		
	");
	return result;
}

# ###############################################
#
# 第二步：将第一步返回的值，与过去 __range_check_hisdata__ 天同一个时间段对比 
#
# ###############################################
def __query_hisdata(res,args) {
	if len(res) == 0 {
		return -1;
	}
	result = query("
		SELECT
			SUM(lt64) AS lt64
		FROM
			'link-*'
		WHERE 
			last_days(%(__range_check_hisdata__), %(__range_time_unit__))
			AND node IN $(__itap_node__)
		GROUP BY
			date_histogram(1d) AS date
		LIMIT 10000
	");

	x0 = res[0]["lt64"];
	xlist = item_values(result,"lt64");
	if len(xlist) == 0 {
		return -1;
	}
	value = deviation_model(x0,xlist);
	if value != -1 {
		return __alert([{"lt64":x0,"value":value}],"INFO",__info_threshold__);
	}
	else {
		reutrn -1;
	}
}

def __query_hisdata_week(res,args) {
        if len(res) == 0 {
                return -1;
        }
        result = query("
                SELECT
                        SUM(lt64) AS lt64
                FROM
                        'link-*'
                WHERE
                        last_weeks(10, %(__range_time_unit__))
			AND node IN $(__itap_node__)
                GROUP BY
                        date_histogram(7d) AS date
                LIMIT 50
        ");

        x0 = res[0]["lt64"];
        xlist = item_values(result,"lt64");
        if len(xlist) == 0 {
        	return -1;
        }
        value = deviation_model(x0,xlist);
        if value != -1 {
                if value >= __warning_threshold__ {
                        __alert([{"lt64":x0,"value":value}],"CRITICAL",__warning_threshold__);
                }
                else {
                        __alert([{"lt64":x0,"value":value}],"WARNING",__info_threshold__);
                }
                return 1;
        }
        else {
        	return -1;
        }
}



def deviation_model(x0,xlist) {
	# 假设 x0 在 xlist 的 10% 到 90% 之间，则认为 x0 正常返回-1。 
	nintyPercent_xlist = percentile(xlist,90);
	tenPercent_xlist   = percentile(xlist,10);
	if x0< nintyPercent_xlist {
		if x0> tenPercent_xlist {
			return -1;
		}
	}
        median_xlist = median(xlist);
	# 当 median 为0时没有检测意义，返回 -1。
	if median_xlist == 0 {
		return -1;
	}

	# 求 xlist 与 median 的差的绝对值
        abs_deviation_list = [];
        for(i=0;i<len(xlist);i++){
                abs_deviation = xlist[i]<median_xlist ? median_xlist-xlist[i] : xlist[i]-median_xlist;
                abs_deviation_list = append(abs_deviation_list,abs_deviation);
        }
	# MAD 为绝对差的中值
        mad = median(abs_deviation_list);
	# 求 x0 与 median 的绝对差
        abs_dev0 = x0<median_xlist ? tenPercent_xlist-x0 : x0-nintyPercent_xlist;
        # 数据量足够的时候 MAD 为 0 说明数据十分平稳几乎没有波动，一旦出现波动，使用z分数评估偏离状况
        if mad == 0 {
		if(abs_dev0 != 0){
			mean_xlist = avg(xlist);
			sd_xlist = stdev(xlist);
			temp = (x0 - mean_xlist)/sd_xlist;
		}
		# abs_dev0 为 0 时，返回 -1。
		else {	
			return -1;
		}
	}
	else {
		temp = abs_dev0/mad;
	}
	if(temp > __info_threshold__) {
#		print("x0    :%(x0)");
#		print("xlist :%(xlist)");
#		print("median:%(median_xlist)");
#		print("10%   :%(tenPercent_xlist)");
#		print("90%   :%(nintyPercent_xlist)");
#		print("MAD   :%(mad)");
#		print("mean  :%(mean_xlist)");
#		print("SD    :%(sd_xlist)");
                return temp;
        }else{
                return -1;
        }
}

def __alert(list, level, threshold) {
	__level__   = level;
	__desc_subtype__ = "Link lt64 包数偏离程度(每%(__range_time_unit__)) > " + fmt_int(threshold) + ".";
	item_set(list,"@timestamp",time("T"));
	alert(list);
#	print("----------------------------------------------------------------------");
}

call_list([
	{ "name": "__query_now",         "args": {} },
	{ "name": "__query_hisdata",     "args": {} },
	{ "name": "__query_hisdata_week","args": {} }
]);



